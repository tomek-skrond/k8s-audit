---
- name: Install updates and tools
  hosts: masters
  become: yes
  tasks:
    - name: Update and upgrade 
      shell: dnf update -y && dnf upgrade -y
    - name: Install packages
      shell: dnf install -y vim
- name: Install tools needed for kubernetes (both nodes)
  hosts: masters
  become: yes
  gather_facts: yes
  tasks:
    - name: fill /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ ansible_enp0s8.ipv4.address }} master"
    - name: fill /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "127.0.0.1 master"
    - name: Disable Firewall
      service:
        name: firewalld
        state: stopped
        enabled: false
    - name: Disable swap
      shell: "cat /etc/fstab; sudo swapoff -a; sed -i '/swap/d' /etc/fstab"
    - name: Disable SELinux permanently
      shell: "sed -i --follow-symlinks 's/^SELINUX=enforcing/SELINUX=disabled/' /etc/sysconfig/selinux"
    - name: Reboot host for SELinux to take effect
      ansible.builtin.reboot:
    - name: Update sysctl for networking
      shell: |
        cat >>/etc/sysctl.d/kubernetes.conf<<EOF
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
        EOF
        sysctl --system
    - name: Install docker engine
      shell: |
        dnf install -y dnf-utils device-mapper-persistent-data lvm2
        dnf-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
        dnf install -y docker-ce
        systemctl enable --now docker
    - name: Add yum repo
      shell: |
        cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
        [kubernetes]
        name=Kubernetes
        baseurl=https://pkgs.k8s.io/core:/stable:/v1.{{ k8s_version }}/rpm/
        enabled=1
        gpgcheck=1
        gpgkey=https://pkgs.k8s.io/core:/stable:/v1.{{ k8s_version }}/rpm/repodata/repomd.xml.key
        EOF
    - name: Install kubernetes components
      shell: "dnf install -y kubeadm kubelet kubectl"
    - name: Flush & Disable iptables
      shell: |
        sudo iptables -F
        sudo iptables -P INPUT ACCEPT
        sudo iptables -P FORWARD ACCEPT
        sudo iptables -P OUTPUT ACCEPT
        sudo iptables -t nat -F

- name: Initialize Kubernetes cluster
  hosts: masters
  become: yes
  tasks:
    - name: remove config.toml
      shell: |
        containerd config default > /etc/containerd/config.toml
        sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
        systemctl restart containerd
    - name: Gather ip address for apiserver
      shell: ip address show dev enp0s8 | grep -E -o '([0-9]{1,3}\.){3}([0-9]{1,3})' | grep -v 255
      register: ip
    - name:  Initialize the cluster
      shell: |
        IP_ADDR=$(ip address show dev enp0s8 | grep -E -o '([0-9]{1,3}\.){3}([0-9]{1,3})' | grep -v 255)
        kubeadm init --apiserver-advertise-address={{ ip.stdout }} --pod-network-cidr=192.168.0.0/16 --control-plane-endpoint master:6443
    - name: Deploy Calico overlay network
      shell: |
        kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.4/manifests/tigera-operator.yaml
        wget https://raw.githubusercontent.com/projectcalico/calico/v3.26.4/manifests/custom-resources.yaml
        kubectl apply -f custom-resources.yaml
    - name: Enable kubectl usage on root account
      shell: |
        mkdir -p $HOME/.kube
        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        sudo chown $(id -u):$(id -g) $HOME/.kube/config
    - name: Generate join command for the workers
      shell: kubeadm token create --print-join-command 2>/dev/null
      register: joincommand
    - name: Print join command
      debug:
        msg:
        - "Installation of kubernetes cluster is successfull"
        - "to join other hosts to the cluster, use command: "
        - "{{ joincommand.stdout }}"